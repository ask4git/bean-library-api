#  https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions

name: bean-library-api CI

on:
  push:
    branches: [ "main", "develop", "temp" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  test:
    runs-on: ubuntu-22.04
    strategy:
      max-parallel: 4
      matrix:
        python-version: [ 3.12 ]
        poetry-version: [ 1.8.3 ]

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U test_user"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5.2.0
        with:
          python-version: ${{ matrix.python-version }}
#          cache: 'poetry'

      - name: Install pipx
        run: |
          apt-get update
          python3 -m pip install --user pipx && python3 -m pipx ensurepath
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install poetry with pipx
        run: pipx install poetry==${{ matrix.poetry-version }}

      - name: Install Dependencies
        run: |
          poetry config virtualenvs.create false
          poetry config installer.max-workers 2
          poetry install --no-interaction --no-dev --no-ansi --no-root
          poetry cache clear pypi --no-interaction --all

      - name: Run tests
        env:
          DATABASE_URL: postgres://test_user:test_password@localhost:5432/test_db
        run: |
          python manage.py migrate
          python manage.py test